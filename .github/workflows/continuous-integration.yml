name: Continuous Integration

on:
  push:
    branches: [staging, master]
  pull_request:
  workflow_call:
    inputs:
      sha:
        required: false
        type: string

env:
  APP_ID: 152323

jobs:
  ember_cli_update:
    name: ember-cli-update
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && contains(github.actor, 'renovate')
    steps:
      - name: Generate app token
        id: generate_token
        uses: tibdex/github-app-token@7ce9ffdcdeb2ba82b01b51d6584a6a85872336d4 # renovate: tag=v1.5.1
        with:
          app_id: ${{ env.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2.4.0
        with:
          ref: ${{ inputs.sha || github.head_ref }}
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 2

      - name: Run ember-cli-update
        uses: kellyselden/ember-cli-update-action@97db10a1de3797801f1b5418cd91fdad73519b52 # renovate: tag=v3.0.23
        with:
          install_command: |
            yarn --no-immutable
          # Delete added workflow files as we have our own and the job will error otherwise.
          autofix_command: |
            rm .github/workflows/ci.yml
          ignore_to: true

      - name: Report merge conflicts
        uses: olivernybroe/action-conflict-finder@5bf5411481db554a4ca95bd678a19739b069f4b5 # renovate: tag=v3.0

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: ember_cli_update
    if: contains('success skipped', needs.ember_cli_update.result) && always()
    steps:
      - name: Checkout code
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2.4.0
        with:
          ref: ${{ inputs.sha || github.head_ref }}

      - name: Build test image
        uses: guidojw/actions/build-docker-image@2b1dea8cbd9e44491c269e771b75636026caf8ca # renovate: tag=v1.1.0
        with:
          file: Dockerfile
          target: base
          name: app

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success' && always()
    steps:
      - name: Checkout code
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2.4.0
        with:
          ref: ${{ inputs.sha || github.head_ref }}

      - name: Add problem matchers
        run: |
          echo '::add-matcher::.github/problem-matchers/eslint-stylish.json'
          echo '::add-matcher::.github/problem-matchers/stylelint.json'

      - name: Set up Node.js
        uses: actions/setup-node@1f8c6b94b26d0feae1e387ca63ccbdc44d27b561 # renovate: tag=v2.5.1
        with:
          node-version: '14'

      - name: Load test image
        uses: guidojw/actions/load-docker-image@2b1dea8cbd9e44491c269e771b75636026caf8ca # renovate: tag=v1.1.0
        with:
          name: app

      - name: Lint
        # Convert output of stylelint so that the problem matcher can match it correctly.
        run: |
          EXIT_STATUS=0
          docker run app yarn ci:eslint || EXIT_STATUS=$?
          node bin/convert-stylelint-output.js "$(docker run app yarn ci:stylelint)" || EXIT_STATUS=$?
          exit $EXIT_STATUS

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success' && always()
    steps:
      - name: Load test image
        uses: guidojw/actions/load-docker-image@2b1dea8cbd9e44491c269e771b75636026caf8ca # renovate: tag=v1.1.0
        with:
          name: app

      - name: Test
        run: |
          docker run -e CI=true -t app yarn test:ember
